# - name: Add Connection Plugin vmware
#   add_host:
#     name: my_vmware
#     ansible_connection: vmware_tools
#     ansible_vmware_host: "{{ vcenter_server }}"
#     ansible_vmware_user: "{{ vcenter_user }}"
#     ansible_vmware_password: "{{ vcenter_pass }}"
#     ansible_vmware_validate_certs: no
#     ansible_vmware_guest_path: "{{ folder }}/{{ inventory_hostname }}"
#     ansible_vmware_tools_user: root
#     ansible_vmware_tools_password: C4mb14m1!

- name: Blanking /etc/hosts file
  shell: echo "127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4" > /etc/hosts


- name: Checking any existing route file
  find:
    paths: /etc/sysconfig/network-scripts
    patterns: route*
  register: routes_to_delete

- name: list routes to delete
  debug: 
    msg: "{{ routes_to_delete }}"

- name: Removing any existing route file
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ routes_to_delete.files }}"
  when: routes_to_delete|length > 0


- name: Checking any existing NIC file
  find:
    paths: /etc/sysconfig/network-scripts
    patterns: ifcfg-e*
  register: ifcfg_to_delete


- name: Removing any existing NIC file
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ ifcfg_to_delete.files }}"
  when: ifcfg_to_delete|length > 0


- name: Blanking DNS file
  shell: "> /etc/resolv.conf"


- name: Checking administrator history
  find:
    paths: /home/administrator
    patterns: "*history*"
    hidden: yes
  register: adminhistory_to_delete


- name: Clearing administrator history
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ adminhistory_to_delete.files }}"
  when: adminhistory_to_delete|length > 0


- name: Checking root history
  find:
    paths: /root
    patterns: "*history*"
    hidden: yes
  register: roothistory_to_delete


- name: Clearing root history
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ roothistory_to_delete.files }}"
  when: roothistory_to_delete|length > 0


- name: Checking /var/log files
  find:
    paths: /var/log
    patterns: 
      - message*
      - cron* 
      - boot* 
      - secure*
      - btmp*
  register: log_to_delete


- name: Stopping system logs
  service:
    name: rsyslog
    state: stopped


- name: Clearing /var/log files
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ log_to_delete.files }}"


- name: Creating /var/log files
  file: 
    path: "{{ item }}"
    state: touch
    owner: root
    group: root
    mode: '0600'
  with_items:
    - /var/log/boot.log
    - /var/log/btmp
    - /var/log/cron
    - /var/log/messages
    - /var/log/secure


- name: Starting system logs
  service:
    name: rsyslog
    state: started

- name: Setting Hostname
  hostname:
    name: "{{ inventory_hostname }}"
