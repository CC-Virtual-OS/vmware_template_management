---
- name: Find folder path of an existing virtual machine
  hosts: localhost
  gather_facts: False
  vars:
    ansible_python_interpreter: "/usr/bin/env python3"
    vcenter_server: "vcpodarea3.lottomatica.net"
    vcenter_user: "virtosadmin"
    vcenter_pass: "Password10"
    vcenter_datacenter: "FARM-AREA3"
    template_name: "RH76-master"
    bkp_template_name: "RH76-master-bkp"
    vm_on_name: "RC-RH76"
    cluster_name: "CLUSTER AREA3"
    datastore_name: "CROSS_MASTER_XtremIO-I_252"
  tasks:
    - name: Get Template "{{ template_name }}" uuid
      vmware_guest_facts:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: False
        datacenter: "{{ vcenter_datacenter }}"
        folder: "/{{ vcenter_datacenter }}/vm"
        name: "{{ template_name }}"
      register: template_facts

    - name: Rename "{{ template_name }}" to "{{ bkp_template_name }}"
      vmware_guest:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        datacenter: "{{ vcenter_datacenter }}"
        validate_certs: False
        cluster: "{{ cluster_name }}"
        uuid: "{{ template_facts.instance.hw_product_uuid }}"
        name: "{{ bkp_template_name }}"

    - name: Cloning VM Template 
      vmware_guest:
        hostname: "{{ vcenter_server }}" 
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}" 
        validate_certs: False
        name: "{{ template_name }}"
        template: "{{ vm_on_name }}" 
        datacenter: "{{ vcenter_datacenter }}"
        folder: "{{ template_facts.instance.hw_folder }}"
        cluster: "{{ cluster_name }}"
        datastore: "{{ datastore_name }}"
        state: poweredoff
      delegate_to: localhost
      register: vm_facts 


    - set_fact:
        vm_networks: "{{ vm_facts.instance.keys() | select('match', '.*eth.*') | list }}"

    - debug:
        msg: "{{ vm_facts.instance[item].macaddress }}"
      loop: "{{ vm_networks }}"
       
    - name: remove all NICs from new template 
      vmware_guest_network:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        datacenter: "{{ vcenter_datacenter }}"
        validate_certs: no
        name: "{{ template_name }}"
        cluster: "{{ cluster_name }}"
        gather_network_info: false
        networks:
         - state: absent
           mac: "{{ vm_facts.instance[item].macaddress }}"
      delegate_to: localhost
      loop: "{{ vm_networks }}"
    
    - name: Power On the new template "{{ template_name }}"
      vmware_guest:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        datacenter: "{{ vcenter_datacenter }}"
        validate_certs: no
        name: "{{ template_name }}"
        state: poweredon
      delegate_to: localhost


