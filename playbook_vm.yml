---
- name: Find folder path of an existing virtual machine
  hosts: linux
  gather_facts: False
  vars:
    # ansible_python_interpreter: "/usr/bin/env python3"
    bkp_template_name: "{{ inventory_hostname }}-bkp"

  tasks:
    - name: Find Template Folder 
      vmware_guest_find:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: no
        name: "{{ inventory_hostname }}"
      delegate_to: localhost
      register: vm_folder

    - set_fact:
        folder: "{{ vm_folder.folders[0] }}"

    - name: Get Template Facts
      vmware_guest_info:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: False
        datacenter: "{{ vcenter_datacenter }}"
        folder: "{{ folder }}"
        name: "{{ inventory_hostname }}"
      delegate_to: localhost
      register: template_facts

    - name: Rename "{{ inventory_hostname }}" to "{{ bkp_template_name }}"
      vmware_guest:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        datacenter: "{{ vcenter_datacenter }}"
        validate_certs: False
        cluster: "{{ cluster_name }}"
        uuid: "{{ template_facts.instance.hw_product_uuid }}"
        name: "{{ bkp_template_name }}"
      delegate_to: localhost

    - name: Cloning VM Template 
      vmware_guest:
        hostname: "{{ vcenter_server }}" 
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}" 
        validate_certs: False
        name: "{{ inventory_hostname }}"
        template: "{{ vm_on_name }}" 
        datacenter: "{{ vcenter_datacenter }}"
        folder: "{{ folder }}"
        cluster: "{{ cluster_name }}"
        datastore: "{{ datastore_name }}"
        state: poweredoff
      delegate_to: localhost
      register: vm_facts 
       
    - name: remove all NICs from new template 
      vmware_guest_network:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        datacenter: "{{ vcenter_datacenter }}"
        validate_certs: no
        name: "{{ inventory_hostname }}"
        cluster: "{{ cluster_name }}"
        gather_network_info: false
        networks:
         - state: absent
           device_type: "vmxnet3"
      delegate_to: localhost

    - name: Power On the new template "{{ inventory_hostname }}"
      vmware_guest:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        datacenter: "{{ vcenter_datacenter }}"
        validate_certs: no
        name: "{{ inventory_hostname }}"
        state: poweredon
      delegate_to: localhost

    - name: Wait for VMware tools to become available
      vmware_guest_tools_wait:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: no
        name: "{{ inventory_hostname }}"
        folder: "{{ folder }}"
      delegate_to: localhost
      register: facts

    - name: Add Connection Plugin vmware
      add_host:
        name: my_vmware
        ansible_connection: vmware_tools
        ansible_vmware_host: "{{ vcenter_server }}"
        ansible_vmware_user: "{{ vcenter_user }}"
        ansible_vmware_password: "{{ vcenter_pass }}"
        ansible_vmware_validate_certs: no
        ansible_vmware_guest_path: "{{ folder }}/{{ inventory_hostname }}"
        ansible_vmware_tools_user: root
        ansible_vmware_tools_password: C4mb14m1!

    - name: command via vmtools
      delegate_to: my_vmware
      command: ls -l 
      register: cmdout

    - debug:
        msg: "{{ cmdout }}"
      


